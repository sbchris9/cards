version: '3.1'

services:
  db:
    image: postgres:11
    ports:
      - 5432
    environment:
      POSTGRES_USER: '${POSTGRES_USER}'
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD}'
      POSTGRES_DB: prod
    volumes:
      - data:/var/lib/postgresql/data
    restart: always
    network_mode: bridge

  api:
    build: ./
    ports:
      - 4000
    links:
      - db:db
    environment:
      NODE_ENV: production
      POSTGRES_USER: '${POSTGRES_USER}'
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD}'
      VIRTUAL_HOST: webapp4051-api.sandorb.dev
      LETSENCRYPT_HOST: webapp4051-api.sandorb.dev
      FRONTEND_URI: '${FRONTEND_URI}'
      ACCESS_TOKEN_SECRET: '${ACCESS_TOKEN_SECRET}'
      REFRESH_TOKEN_SECRET: '${REFRESH_TOKEN_SECRET}'
      VIRTUAL_PORT: 4000
    depends_on:
      - db
    restart: always
    network_mode: bridge

  web:
    build:
      context: .
      dockerfile: web.Dockerfile
    volumes:
      - frontend:/app/packages/web/build
    environment:
      REACT_APP_API_URL: https://webapp4051-api.sandorb.dev
      PUBLIC_URL: https://webapp4051.sandorb.dev
    network_mode: bridge

  web_server:
    image: nginx
    volumes:
      - frontend:/usr/share/nginx/html:ro
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    environment:
      VIRTUAL_HOST: webapp4051.sandorb.dev
      LETSENCRYPT_HOST: webapp4051.sandorb.dev
    ports:
      - 80
    restart: always
    network_mode: bridge

volumes:
  data:
  frontend:
